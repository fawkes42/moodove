import { type NextPage } from "next";
import Head from "next/head";
import { SignInButton, useUser } from "@clerk/nextjs";
import { SignOutButton } from "@clerk/clerk-react";
import { type RouterOutputs, api } from "~/utils/api";
import Image from "next/image";
import { Input } from "~/components/ui/input";
import { formatDistanceToNow } from "date-fns";
// import { useToast } from "~/components/ui/use-toast";

const CreatePostWizard = () => {
  const { user } = useUser();

  if (!user) return null;
  return (
    <div className="flex items-center gap-4">
      <Image
        src={user.profileImageUrl || "/images/default-profile.png"}
        alt={user.fullName || "Profile image"}
        className="rounded-full"
        width={48}
        height={48}
      />
      <Input placeholder="Type some emoji" />
    </div>
  );
};

type PostWithAuthor = RouterOutputs["posts"]["getAll"][number];
const PostView = (props: PostWithAuthor) => {
  const { post, author } = props;
  return (
    <div className="flex items-center gap-4 border-b p-4" key={post.id}>
      <Image
        src={author.profileImageUrl || "/images/default-profile.png"}
        alt={author.username || "Profile image"}
        className="rounded-full"
        width={40}
        height={40}
      />
      <div>
        <div className="flex items-center gap-2 text-sm text-foreground">
          <div>{`@${author.username}`}</div>
          <span>Â·</span>
          <div>
            {formatDistanceToNow(new Date(post.createdAt), {
              addSuffix: true,
            })}
          </div>
        </div>
        <span>{post.content}</span>
      </div>
    </div>
  );
};

const Home: NextPage = () => {
  const user = useUser();

  // const { toast } = useToast();
  // toast({
  //   title: "Hello",
  //   description: "This is a toast",
  //   duration: 3000,
  //   type: "background",
  // })

  const { data, isLoading } = api.posts.getAll.useQuery();

  if (isLoading) {
    return <div>Loading...</div>;
  }

  if (!data) {
    return (
      <div>{`You should try to publish the first post, don't you think?`}</div>
    );
  }
  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex h-screen justify-center">
        <div className="h-full w-full border-x md:max-w-2xl">
          <div className="border-b p-4 text-white">
            {!user.isSignedIn ? (
              <SignInButton />
            ) : (
              <CreatePostWizard></CreatePostWizard>
            )}
          </div>
          <div className="flex flex-col">
            {data?.map((fullpost) => (
              <PostView key={fullpost.post.id} {...fullpost} />
            ))}
          </div>
        </div>
      </main>
    </>
  );
};

export default Home;
